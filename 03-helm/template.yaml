---
apiVersion: secretgen.carvel.dev/v1alpha1
kind: SecretTemplate
metadata:
  name: helm-postgres-bindable
spec:
  #! service account with permissions to get/list/watch pods, services, secrets
  serviceAccountName: helm-reader
  #! list of resources to read off, these resources can be dynamically specified based on the fields of previously stated resources
  inputResources:
  - name: pod
    ref:
      apiVersion: v1
      kind: Pod
      name: my-release-postgresql-0
  - name: service
    ref:
      apiVersion: v1
      kind: Service
      name: my-release-postgresql
  - name: secret
    ref:
      apiVersion: v1
      kind: Secret
      #! the name of an input resource can be determined by the data contained in a previous input resource
      name: $(.pod.spec.containers[?(@.name=="postgresql")].env[?(@.name=="POSTGRES_PASSWORD")].valueFrom.secretKeyRef.name)
  #! the template that follows a subset of the Secret API
  template:
    #! annotation and label metadata properties support templating
    metadata:
      labels:
        key1: $(.pod.metadata.name)
      annotations:
        key2: $(.pod.metadata.name)
    #! the type is immutable for now and can't be updated in subsequent reconciliations
    type: postgresql
    #! stringData is used for templating in data that is not base64 encoded
    stringData:
      port: $(.service.spec.ports[?(@.name=="tcp-postgresql")].port)
      database: postgres
      host: $(.service.spec.clusterIP)
      username: postgres
    #! data is used for templating in data that *is* base64 encoded, most likely Secrets.
    data:
      password: $(.secret.data.postgres-password)
